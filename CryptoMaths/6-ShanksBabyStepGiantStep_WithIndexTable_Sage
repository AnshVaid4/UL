#UseShank's Baby-step Giant-step algorithm to solve


#2^x cong 7 mod 19

a=7
g=2
p=19
s=int(ceil(sqrt(float(p-1))))
babystep=list(range(0,s))
giantstep=list(range(1,s+1))

print('S=sqrt(p-1)=',s,'\ni=',babystep,'\nj=',giantstep)
print()

l_babystep=[]
l_giantstep=[]

for i in babystep:
    l_babystep.append((mod(a*(g^i),p),i))

for j in giantstep:
    l_giantstep.append((mod(g^(j*s),p),j*s))

    
print('S(a*g^i mod p, i)=',l_babystep)
print('T(g^(j*s) mod p, js)=',l_giantstep)

for i in l_babystep:
    for j in l_giantstep:
        if j[0] == i[0]:
            print(i,'x=js-i=>',j[1]-i[1])

#======================================================================================================= Solution using Index Table

prime=[13]
n=2
a=6
flag=1
for i in prime:
    count=0
    if i>n:
        for j in range(1,i):
            if mod(n^j,i)==1:
                count+=1
                break
            count+=1
        if count==euler_phi(i):
            print(i)
            flag=0

print('I(a)\t','k')
if flag==0:
    for i in prime:
        for j in range(1,i):
            if mod(n^j,i)==a:
                print('I(',mod(n^j,i),')','\t',j,sep='')
